{"version":3,"sources":["model-test.ts"],"names":[],"mappings":"AA8BA,eAAe;AACf,MAAM,OAAO,aAAa;IACzB,iCAAiC;IACjC,QAAQ,CAAC,MAAW,EAAE,IAAS,EAAE,OAAY,EAAE,KAAU;QACxD,qBAAqB;IACtB,CAAC;IAED,gBAAgB;IAChB,OAAO,CAAC,MAAW,EAAE,IAAS,EAAE,OAAY,EAAE,KAAU;QACvD,OAAO,OAAO,CAAA;IACf,CAAC;CACD","file":"model-test.js","sourcesContent":["import { ResolversOf } from \"@src/helpers/interfaces\";\n\n/**\n * @tsmodel\n * Create Model using interfaces\n */\nexport interface UserModel {\n\tid: ID,\n\t/** This is firstname */\n\tfirstName?: string,\n\tlastName?: string,\n\t/** This field is required! */\n\tfullName: string,\n\n\t/** Custom type Email */\n\temail: Email,\n\tnewsletter: boolean,\n\n\t/** Those are bookings */\n\tBookings?: Booking[]\n\n\tmessage: string\n}\n\n/** @tsmodel */\ntype Email= `/$Email regex^/`;\n\n/** @tsmodel */\ntype ID= string;\n\n/** @tsmodel */\nexport class UserResolvers implements ResolversOf<UserModel>{\n\t/** Overriding booking comment */\n\tBookings(parent: any, args: any, context: any, infos: any){\n\t\t// this is a resolver\n\t}\n\n\t/** a message */\n\tmessage(parent: any, args: any, context: any, infos: any): string{\n\t\treturn 'hello'\n\t}\n}\n\n/**\n * @tsmodel\n * Bookings\n */\nexport interface Booking{\n\tid: ID,\n\tname: string\n}"]}